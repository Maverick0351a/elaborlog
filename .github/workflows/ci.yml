name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install build
          pip install .[dev,server,color]
      - name: Lint
        run: ruff check src
      - name: Tests
        run: pytest -q --maxfail=1
      - name: Build artifacts
        if: matrix.python-version == '3.11'
        run: |
          python -m build --wheel --sdist
      - name: Store artifacts
        if: matrix.python-version == '3.11'
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install .[dev,server,color]
      - name: Coverage
        run: |
          coverage run -m pytest -q
          coverage xml
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          fail_ci_if_error: true
          verbose: false

  benchmark:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
      - name: Install deps (bench)
        run: |
          python -m pip install --upgrade pip
          pip install .[server,color]
      - name: Run benchmark (small sample)
        run: |
          python bench/benchmark.py --lines 30000 --warm 5000 --measure 10000 --json bench-result.json
          echo "Benchmark run complete" | tee bench.log
      - name: Show summary
        run: cat bench-result.json || true
      - name: Upload benchmark artifact
        uses: actions/upload-artifact@v4
        with:
          name: bench-result
          path: |
            bench-result.json
            bench.log
